# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Release

on:
  workflow_dispatch:
    inputs:
      source_ref:
        description: 'Source Branch'     
        required: true
        default: 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BUILD_CONFIG: 'Release'
  SOLUTION: 'Monai.Deploy.InformaticsGateway.sln'
  TEST_RESULTS: 'results/'

jobs:
  build-and-release-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Log in to the Container registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1.12.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3.6.2
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - uses: actions/setup-dotnet@v1
      with: 
        dotnet-version: '6.0.x'

    - name: Install GitVersion
      run: dotnet tool install --global GitVersion.Tool
      
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.11
      with:
        useConfigFile: true 
        configFilePath: .github/.gitversion.yml

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build -c ${{ env.BUILD_CONFIG }} --nologo ${{ env.SOLUTION }}
      working-directory: ./src

    - name: Run Unit Test
      run: dotnet test -c ${{ env.BUILD_CONFIG }} -v=minimal --runtime linux-x64 --results-directory "${{ env.TEST_RESULTS }}" --collect:"XPlat Code Coverage" --settings "./src/coverlet.runsettings" ${{ env.SOLUTION }}
      working-directory: ./src

    - uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }} 
        directory: "${{ env.TEST_RESULTS }}"
        files: "**/coverage.opencover.xml"
        flags: unittests 
        name: codecov-umbrella 
        fail_ci_if_error: true 
        verbose: true 

    - name: Build and push Docker image
      uses: docker/build-push-action@v2.9.0
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Scan image with Azure Container Scan
      env:
        TRIVY_TIMEOUT_SEC: 360s
      uses: Azure/container-scan@v0.1
      with:
        image-name: ${{ steps.meta.outputs.tags }}

    - name: Scan image with Anchore
      id: scan
      uses: anchore/scan-action@v2
      with:
        image: ${{ steps.meta.outputs.tags }}
        fail-build: true
        severity-cutoff: high
        acs-report-enable: true

    - name: upload Anchore scan SARIF report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}
